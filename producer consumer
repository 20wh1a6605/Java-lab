package roll_6605;
import java.util.LinkedList;
class PC{
	LinkedList<Integer> list = new LinkedList<Integer>();
	int capacity = 3;
	public void produce() throws InterruptedException{
		int value = 0;
		while(true) {
			synchronized(this) {
				while(list.size()==capacity) {
					wait();
				}
				System.out.println("producer produced: "+value);
				list.add(value++);
				notify();
				Thread.sleep(1000);
			}
		}
	}
	public void consume() throws InterruptedException{
		while(true) {
			synchronized(this) {
				while(list.size()==0) {
					wait();
				}
				int val = list.removeFirst();
				System.out.println("Consumer consumed: "+val);
				notify();
				Thread.sleep(1000);
			}
		}
	}
}
public class Producerconsumer {
	public static void main(String[] args) throws InterruptedException{
		final PC pc = new PC();
		Thread t1 = new Thread(new Runnable() {
			public void run() {
				try {
					pc.produce();
				}
				catch(InterruptedException e) {
					System.out.println(e);
				}
			}
		});
		Thread t2 = new Thread(new Runnable() {
			public void run() {
				try {
					pc.consume();
				}
				catch(InterruptedException e) {
					System.out.println(e);
				}
			}
		});
		t1.start();
		t2.start();
		t1.join();
		t2.join();
		
	}
}

